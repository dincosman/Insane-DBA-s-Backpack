---
- hosts: dbservers
  vars:
    removed_value: REMOVED="T"/>
    OLDGRIDHOME: /u01/app/19.20/grid
    patch_dir: /u01/app/Setup
    ansible_python_interpreter: /usr/bin/python3
  remote_user: root
  tasks:

  - name: create response file for silent deinstall
    action: shell export OLDGRIDHOME={{ OLDGRIDHOME}}; $OLDGRIDHOME/deinstall/deinstall -checkonly
    become: yes
    become_user: oracle
    become_method: su
    throttle: 1

  - name: register old grid_home responsefile for deinstall
    action:  shell echo $(ls -lsrt /tmp/deinstall*/response/*.rsp  |tail -1 | awk '{print $NF}')
    register: oldgridresponse

  - name: unlock old grid_home for deinstall
    action:  shell export OLDGRIDHOME={{ OLDGRIDHOME }};  $OLDGRIDHOME/crs/install/rootcrs.sh -unlock -crshome $OLDGRIDHOME -paramfile {{ oldgridresponse.stdout }}

  - name: Recursively change ownership of old_grid_home directory
    ansible.builtin.file:
      path: "$(dirname {{ OLDGRIDHOME }})"
      state: directory
      recurse: yes
      owner: oracle
      group: oinstall

  - name: deinstall oldgridhome
    become: yes
    become_user: oracle
    become_method: su
    ansible.builtin.expect:
      command: /bin/bash -c {{ OLDGRIDHOME }}/deinstall/deinstall
      responses:
        'Do you want to continue': 'y'
      echo: yes
      timeout: 600
    throttle: 1
    run_once: true
    register: deinstall_result

  - name: check inventory whether old_gridhome is tagged with removed flag
    action:  shell echo $(grep "{{ OLDGRIDHOME }}" /u01/app/oraInventory/ContentsXML/inventory.xml | awk '{ print $NF }')
    register: removedflag

  - name: remove old grid_home directory
    action:  shell export OLDGRIDHOME={{ OLDGRIDHOME}}; rm -rf "$(dirname "$OLDGRIDHOME")"
    when: deinstall_result.rc == 0 or removedflag.stdout ==  removed_value 
